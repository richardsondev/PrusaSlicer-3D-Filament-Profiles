name: ci
 
on:
  push
 
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      name: Checkout Code
    - name: Set variables
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.vars.outputs.sha_short }}
        release_name: Release ${{ steps.vars.outputs.sha_short }}
        draft: false
        prerelease: false
        
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  ci:
    needs: [release]
    strategy:
      matrix:
        kind: ['windows', 'linux-mac']
        include:
          - kind: windows
            output: zip
            content: application/zip
          - kind: linux-mac
            output: tar.gz
            content: application/gzip
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      name: Checkout Code

    - uses: actions/download-artifact@v1
      name: Load Release URL File from release job
      with:
        name: release_url
        
    - name: Operate and copy files to output
      shell: bash
      run: mkdir output && cp -r ./profiles ./output/ && cp README.md ./output/
      
    - name: Package it all up
      shell: bash
      run: cd output && if [ "${{ matrix.output }}" = "zip" ]; then 7z a -r -tzip ./out.zip .; else tar -czvf ./out.tar.gz -C output *; fi 

    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
      env:
        TAG_REF_NAME: ${{ github.ref }}
        REPOSITORY_NAME: ${{ github.repository }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./out.${{ matrix.output }}
        asset_name: PrusaSlicer-3D-Filament-Profiles.${{ matrix.output }}
        asset_content_type: ${{ matrix.content }}
